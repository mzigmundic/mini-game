package data;

import org.newdawn.slick.opengl.Texture;
import static helpers.Vrijeme.*;
import static helpers.Grafika.*;

public abstract class Projektil implements Jedinka {
	
	private Texture texture;
	private float x, y, speed, xVelocity, yVelocity;
	private int damage, width, height;
	private Neprijatelj target;
	private boolean alive;
	
	public Projektil(TipProjektila type, Neprijatelj target, float x, float y, int width, int height) {
		this.texture = type.tekstura;
		this.x = x;
		this.y = y;
		this.width = width;
		this.height = height;
		this.speed = type.brzinaProjektila;
		this.damage = type.snagaProjektila;
		this.target = target;
		this.alive = true;
		this.xVelocity = 0f;
		this.yVelocity = 0f;
		calculateDirection();
	}
	
	private void calculateDirection() {
		float totalAllowedMovement = 1.0f;
		float xDistanceFromTarget = Math.abs(target.dohvatiX() - x + PLOCICA_SIZE / 4);
		float yDistanceFromTarget = Math.abs(target.dohvatiY() - y + PLOCICA_SIZE / 4);
		float totalDistanceFromTarget = xDistanceFromTarget + yDistanceFromTarget;
		float xPercentOfMovement = xDistanceFromTarget / totalDistanceFromTarget;
		xVelocity = xPercentOfMovement;
		yVelocity = totalAllowedMovement - xPercentOfMovement;
		
		// Set direction based on position of target relative to tower
		if (target.dohvatiX() < x) {
			xVelocity *= -1;
		}
		if (target.dohvatiY() < y) {
			yVelocity *= -1;
		}
	}
	
	// Deal damage to Enemy
	public void damage() {
		target.damage(damage);
		alive = false;
	}
	
	public void osvjezi() {
		if (alive) {
			calculateDirection();
			x += xVelocity * speed * Delta();
			y += yVelocity * speed * Delta();
			if (ProvjeriSudar(x, y, width, height, target.dohvatiX(), target.dohvatiY(), target.getWidth(), target.getHeight())) {
				damage();
			}
			draw();
		}
	}
	
	public void draw() {
		CrtajQTeksturu(texture, x + PLOCICA_SIZE / 4, y + PLOCICA_SIZE / 4, width, height);
	}

	public float dohvatiX() {
		return x;
	}

	public float dohvatiY() {
		return y;
	}

	public void postaviX(float x) {
		this.x = x;
	}

	public void postaviY(float y) {
		this.y = y;
	}

	public int getWidth() {
		return width;
	}

	public int getHeight() {
		return height;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public void setHeight(int height) {
		this.height = height;
	}
	
	public Neprijatelj getTarget() {
		return target;
	}
	
	public void setAlive(boolean status) {
		alive = status;
	}
	

}
